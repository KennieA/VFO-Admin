@model WDAdmin.WebUI.Models.CategoryResultsViewModel

@{
    ViewBag.Title = LangResources.SeeResults;
}

<h4 class="alert_info">@string.Format(LangResources.CategoryResultTitle, Model.UserName)</h4>

<link href="@Url.Content("~/Content/jqplot/jquery.jqplot.min.css")" rel="stylesheet" type="text/css" />

<!--[if lte IE 8]><script src="@Url.Content("~/Scripts/jqplot/excanvas.min.js")" type="text/javascript"></script><![endif]-->
<script src="@Url.Content("~/Scripts/jqplot/jquery.jqplot.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/jquery.jqplot.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.logAxisRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.canvasTextRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.canvasAxisLabelRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.barRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.canvasAxisTickRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.categoryAxisRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.pointLabels.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.dateAxisRenderer.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jqplot/plugins/jqplot.highlighter.min.js")" type="text/javascript"></script>

@if (Model.Results != null && Model.Results.Any())
{
    <article class="module width_full">
        <header><h3>@LangResources.CategoryResultsHeader</h3></header>
        <table>
            <tr>
                <td>@LangResources.PassedProcent</td>
                <td>@string.Format("{0:F}%", Model.PassedProcent)</td>
            </tr>
            <tr>
                <td>@LangResources.Average</td>
                <td>@Model.Average.ToString("F")</td>
            </tr>
        </table>
        <br />
        @{
            var grid = new WebGrid(Model.Results, rowsPerPage:20);   
            @grid.GetHtml(columns: grid.Columns(
            grid.Column(format: (item) =>
            {
                if (item.Passed)
                {
                    return Html.Raw(string.Format("<text><img class=\"passed\" src=\"{0}\" alt=\"\"/></text>", Url.Content("~/Content/Graphics/icn_alert_success.png")));
                }
                else if (item.NTries > 0)
                {
                    return Html.Raw(string.Format("<text><img class=\"passed\" src=\"{0}\" alt=\"\"/></text>", Url.Content("~/Content/Graphics/icn_alert_error.png")));
                }
                else return Html.Raw("");
            }
            ),
            grid.Column("CategoryName", LangResources.CategoryName, canSort: true),
            grid.Column("Score", LangResources.Result, canSort: true, format: (item) => {
                if (item.Passed) { return LangResources.Passed; }
                else if (item.NTries > 0) { return LangResources.Failed; }
                else { return LangResources.NoResult; }
            }),
            grid.Column("NTries", LangResources.NTries, canSort: true),
            grid.Column(header: "", format: @<text>@Html.ActionLink(LangResources.SeeDetails, "ExerciseResults", new { userId = Model.UserId, categoryId = item.CategoryId }, new { @class = "icn_search" })</text>)));
        }
        <br />
    </article>

    <article class="module width_full">
        <header><h3>@LangResources.CategoryGraphHeader</h3></header>
        <div id="tries-placeholder" class="flot-placeholder clear"></div>
    </article>

    <article class="module width_full">
        <header><h3>@LangResources.ActivityGraphHeader</h3></header>
        <div id="activity-placeholder" class="flot-placeholder clear"></div>
    </article>
}
else
{   
    <h4 class="alert_warning">
        @LangResources.NoResultsFound
    </h4>  
}

<button class="back" onclick="history.back(); return false;">@LangResources.BackButton</button>

<script type="text/javascript">
    $(document).ready(function () {
        var triesData = @Html.Raw(Model.TryStatistic.PlotData);
        var ticks = @Html.Raw(Model.TryStatistic.Ticks);
        var ids = @Html.Raw(Model.TryStatistic.Ids);

        $("#tries-placeholder").jqplot(triesData, {
            stackSeries: true,
            series: [
                {label: "@Html.Raw(LangResources.ExercisesPassed)"},
                {label: "@Html.Raw(LangResources.ExercisesFailed)"},
                {label: "@Html.Raw(LangResources.ExercisesTotal)"}
                ],
            seriesColors: ['#4b9502','#b10000', '#999999'],
            seriesDefaults: {
                renderer: $.jqplot.BarRenderer,
                renderOptions: {
                    varyBarColor: true
                }
            },
            legend: {
                show: true,
                placement: 'outsideGrid',
                location: 'n'
            },
            axes: {
                xaxis: {
                    renderer: $.jqplot.CategoryAxisRenderer,
                    labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                    tickRenderer: $.jqplot.CanvasAxisTickRenderer,
                    ticks: ticks,
                    tickOptions: {
                        angle: 45
                    }
                }
            }
        });

        $('#tries-placeholder').bind('jqplotDataClick', function (ev, seriesIndex, pointIndex, data){
            self.location = "@Url.Action("ExerciseResults")/" + "@Model.UserId/" + ids[pointIndex];
        });


        var activityPacked = @Html.Raw(Model.ActivityStatistic.PlotData);
        var activityData = [];
        $(activityPacked).each(function (i, v) {
            activityData.push([v["Date"], v["Count"]]);
        });
        $('#activity-placeholder').jqplot([activityData], {
            axes: {
                xaxis: {
                    renderer: $.jqplot.DateAxisRenderer,
                    tickOptions: { formatString: '%d-%m-%Y' }
                }
            },
            seriesDefaults: {
                renderer: $.jqplot.BarRenderer,
                rendererOptions: {
                    barWidth: 2,
                    shadowOffset: 1,
                    shadowDepth: 3
                }
            },
            series: [ { markerOptions: {style: 'square' } } ],
            highlighter: {
                show: true
            }
        });
    });
</script>